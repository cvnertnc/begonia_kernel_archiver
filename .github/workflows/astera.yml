name: Sync Astera branch daily

on:
  workflow_call:
    inputs:
      from_ci:
        type: boolean
        required: false
        default: true

  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Add GitLab remote and fetch fifteen branch
        run: |
          git remote add upstream https://github.com/xiaomi-begonia-dev/android_kernel_xiaomi_mt6785.git || true
          git fetch upstream fifteen

      - name: Sync Astera and Update branches
        run: |
          set -e
          new_commit=$(git rev-parse upstream/fifteen)
          echo "Latest upstream commit: $new_commit"

          # Astera Branch: Upstream ile senkronize et (tüm commitler burada)
          if git rev-parse --verify astera >/dev/null 2>&1; then
              git checkout astera
              current_astera_commit=$(git rev-parse HEAD)
          else
              git checkout -b astera upstream/fifteen
              current_astera_commit=""
          fi

          if [ "$current_astera_commit" != "$new_commit" ]; then
              echo "Updating astera branch..."
              git reset --hard upstream/fifteen
              # Workflow dosyalarını commit dışı bırak
              git rm --cached .github/workflows/*.yml 2>/dev/null || true
              git add -A
              git commit -m "Sync astera with upstream" || echo "No changes"
              git push origin astera --force
          else
              echo "Astera branch zaten güncel."
          fi

          # Update Branch: Sadece update-astera.md'yi tut
          if git rev-parse --verify update >/dev/null 2>&1; then
              git checkout update
          else
              git checkout -b update upstream/fifteen
          fi

          if [ -f update-astera.md ]; then
              recorded_commit=$(grep -m1 "^Commit:" update-astera.md | awk '{print $2}')
          else
              recorded_commit=""
          fi

          if [ "$recorded_commit" != "$new_commit" ]; then
              echo "Update branch'e yeni log ekleniyor..."
              current_time=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
              echo "Commit: $new_commit" > update-astera.md
              echo "Checked at: $current_time" >> update-astera.md
              git add update-astera.md
              git commit -m "Update log: $new_commit"
              git push origin update --force
          else
              echo "Update branch zaten güncel."
          fi

      - name: Clear older runs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list -L400 --json databaseId -q '.[].databaseId' | tail -n+5 | xargs -IID gh api "repos/$GITHUB_REPOSITORY/actions/runs/ID" -X DELETE || :